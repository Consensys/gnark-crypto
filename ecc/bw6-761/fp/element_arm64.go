//go:build !purego

// Copyright 2020-2025 Consensys Software Inc.
// Licensed under the Apache License, Version 2.0. See the LICENSE file for details.

// Code generated by consensys/gnark-crypto DO NOT EDIT

package fp

import (
	_ "github.com/consensys/gnark-crypto/field/asm/element_12w"
)

// Butterfly sets
//
//	a = a + b (mod q)
//	b = a - b (mod q)
func Butterfly(a, b *Element) {
	_butterflyGeneric(a, b)
}

//go:noescape
func mul(res, x, y *Element)

// Mul z = x * y (mod q)
//
// x and y must be less than q
func (z *Element) Mul(x, y *Element) *Element {
	mul(z, x, y)
	return z
}

// Square z = x * x (mod q)
//
// x must be less than q
func (z *Element) Square(x *Element) *Element {
	// see Mul for doc.
	mul(z, x, x)
	return z
}

// MulBy3 x *= 3 (mod q)
func MulBy3(x *Element) {
	_x := *x
	x.Double(x).Add(x, &_x)
}

// MulBy5 x *= 5 (mod q)
func MulBy5(x *Element) {
	_x := *x
	x.Double(x).Double(x).Add(x, &_x)
}

// MulBy11 x *= 11 (mod q)
func MulBy11(x *Element) {
	var y = Element{
		4056054414400208518,
		3320816571827031140,
		10263935383895698150,
		11003897938091601562,
		15597443347325643510,
		13135057492086854609,
		2659919018052618801,
		3683105852685266909,
		6137961753831301777,
		15077955943918945393,
		14961510259660508891,
		8138608324875079,
	}
	x.Mul(x, &y)
}

// MulBy13 x *= 13 (mod q)
func MulBy13(x *Element) {
	var y = Element{
		4345973640412121648,
		16340807117537158706,
		14673764841507373218,
		5587754667198343811,
		12846753860245084942,
		4041391838244625385,
		8324122986343791677,
		8773809490091176420,
		5465994123296109449,
		6649773564661156048,
		9147430723089113754,
		54281803719730243,
	}
	x.Mul(x, &y)
}

func fromMont(z *Element) {
	_fromMontGeneric(z)
}

//go:noescape
func reduce(res *Element)

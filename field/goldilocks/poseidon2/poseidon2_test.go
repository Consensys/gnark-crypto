// Copyright 2020-2025 Consensys Software Inc.
// Licensed under the Apache License, Version 2.0. See the LICENSE file for details.

package poseidon2

import (
	"testing"

	fr "github.com/consensys/gnark-crypto/field/goldilocks"
)

func TestPoseidon2Width8(t *testing.T) {
	var input, expected [8]fr.Element
	// these are random values generated by SetRandom()
	input[0].SetUint64(16906858123866173649)
	input[1].SetUint64(15166437626912738600)
	input[2].SetUint64(5043155767520437527)
	input[3].SetUint64(4803372521910203894)
	input[4].SetUint64(1363381407771951133)
	input[5].SetUint64(14358392110422722767)
	input[6].SetUint64(16147940662011238603)
	input[7].SetUint64(17042226261559028170)

	expected[0].SetUint64(4831120570930915263)
	expected[1].SetUint64(7858209692001460708)
	expected[2].SetUint64(1117691555051945953)
	expected[3].SetUint64(11282480842472032166)
	expected[4].SetUint64(7526220450308569653)
	expected[5].SetUint64(10553309571379115098)
	expected[6].SetUint64(3812791434429600343)
	expected[7].SetUint64(13977580721849686556)

	h := NewPermutation(8, 6, 17)
	h.Permutation(input[:])
	for i := 0; i < h.params.Width; i++ {
		if !input[i].Equal(&expected[i]) {
			t.Fatal("mismatch error")
		}
	}
}

// bench
func BenchmarkPoseidon2Width8(b *testing.B) {
	h := NewPermutation(8, 6, 17)
	var tmp [8]fr.Element
	for i := 0; i < 8; i++ {
		tmp[i].SetRandom()
	}
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		h.Permutation(tmp[:])
	}
}

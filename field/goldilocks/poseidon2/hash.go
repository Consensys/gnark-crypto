// Copyright 2020-2025 Consensys Software Inc.
// Licensed under the Apache License, Version 2.0. See the LICENSE file for details.

// Code generated by consensys/gnark-crypto DO NOT EDIT

package poseidon2

import (
	fr "github.com/consensys/gnark-crypto/field/goldilocks"
	gnarkHash "github.com/consensys/gnark-crypto/hash"
	"hash"
	"sync"
)

// NewMerkleDamgardHasher returns a Poseidon2 hasher using the Merkle-Damgard
// construction with the default parameters.
func NewMerkleDamgardHasher() gnarkHash.StateStorer {
	return gnarkHash.NewMerkleDamgardHasher(
		&Permutation{GetDefaultParameters()}, make([]byte, fr.Bytes))
}

// GetDefaultParameters returns a set of parameters for the Poseidon2 permutation.
// The default parameters are,
//
//  1. for compression:
//     - width: 8
//     - nbFullRounds: 6
//     - nbPartialRounds: 17
//
//  2. for sponge:
//     - width: 12
//     - nbFullRounds: 6
//     - nbPartialRounds: 17
var GetDefaultParameters = sync.OnceValue(func() *Parameters {
	return NewParameters(8, 6, 17)
	// return NewParameters(12, 6, 17)
})

// GetDefaultParameters returns a set of parameters for the Poseidon2 permutation.
// The default parameters are,
//
//  1. for compression:
//     - width: 8
//     - nbFullRounds: 6
//     - nbPartialRounds: 17
//
//  2. for sponge:
//     - width: 12
//     - nbFullRounds: 6
//     - nbPartialRounds: 17
var GetDefaultParameters = sync.OnceValue(func() *Parameters {
	return NewParameters(8, 6, 17)
	// return NewParameters(12, 6, 17)
})

var diag8 [8]fr.Element
var diag12 [12]fr.Element

func init() {
	// diagonal of internal matrix when Width=8
	// same as https://github.com/Plonky3/Plonky3/blob/f91c76545cf5c4ae9182897bcc557715817bcbdc/goldilocks/src/poseidon2.rs#L54
	diag8[0].SetUint64(0xa98811a1fed4e3a5)
	diag8[1].SetUint64(0x1cc48b54f377e2a0)
	diag8[2].SetUint64(0xe40cd4f6c5609a26)
	diag8[3].SetUint64(0x11de79ebca97a4a3)
	diag8[4].SetUint64(0x9177c73d8b7e929c)
	diag8[5].SetUint64(0x2a6fe8085797e791)
	diag8[6].SetUint64(0x3de6e93329f8d5ad)
	diag8[7].SetUint64(0x3f7af9125da962fe)

	// diagonal of internal matrix when Width=12
	// same as https://github.com/Plonky3/Plonky3/blob/f91c76545cf5c4ae9182897bcc557715817bcbdc/goldilocks/src/poseidon2.rs#L65
	diag12[0].SetUint64(0xc3b6c08e23ba9300)
	diag12[1].SetUint64(0xd84b5de94a324fb6)
	diag12[2].SetUint64(0x0d0c371c5b35b84f)
	diag12[3].SetUint64(0x7964f570e7188037)
	diag12[4].SetUint64(0x5daf18bbd996604b)
	diag12[5].SetUint64(0x6743bc47b9595257)
	diag12[6].SetUint64(0x5528b9362c59bb70)
	diag12[7].SetUint64(0xac45e25b7127b68b)
	diag12[8].SetUint64(0xa2077d7dfbb606b5)
	diag12[9].SetUint64(0xf3faac6faee378ae)
	diag12[10].SetUint64(0x0c6388b51545e883)
	diag12[11].SetUint64(0xd27dbb6944917b60)

	gnarkHash.RegisterHash(gnarkHash.POSEIDON2_GOLDILOCKS, func() hash.Hash {
		return NewMerkleDamgardHasher()
	})
}

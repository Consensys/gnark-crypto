//go:build !purego

// Code generated by gnark-crypto/generator. DO NOT EDIT.
// Refer to the generator for more documentation.

#include "textflag.h"
#include "funcdata.h"
#include "go_asm.h"

TEXT Â·mulAccE4_avx512(SB), NOSPLIT, $0-32
	MOVD         $const_q, AX
	VPBROADCASTD AX, Z0
	MOVD         $const_qInvNeg, AX
	VPBROADCASTD AX, Z1
	MOVQ         $0x0000000000005555, AX
	KMOVD        AX, K3
	MOVQ         alpha+0(FP), R14
	MOVQ         scale+8(FP), R15
	MOVQ         res+16(FP), CX
	MOVQ         n+24(FP), BX
	VMOVDQU32    0(R14), X2
	VINSERTI64X2 $1, X2, Y2, Y2
	VINSERTI64X4 $1, Y2, Z2, Z2
	SHRQ         $2, BX

start_1:
	TESTQ        BX, BX
	JEQ          end_2          // N == 0, we are done
	VMOVDQU32    0(CX), Z3
	VPBROADCASTD 0(R15), X4
	VPBROADCASTD 4(R15), X5
	VPBROADCASTD 8(R15), X6
	VPBROADCASTD 12(R15), X7
	VINSERTI64X2 $1, X5, Y4, Y4
	VINSERTI64X2 $1, X7, Y6, Y6
	VINSERTI64X4 $1, Y6, Z4, Z4
	VPSRLQ       $32, Z2, Z9
	VPSRLQ       $32, Z4, Z10
	VPMULUDQ     Z2, Z4, Z11
	VPMULUDQ     Z9, Z10, Z12
	VPMULUDQ     Z11, Z1, Z13
	VPMULUDQ     Z12, Z1, Z14
	VPMULUDQ     Z13, Z0, Z13
	VPADDQ       Z11, Z13, Z11
	VPMULUDQ     Z14, Z0, Z14
	VPADDQ       Z12, Z14, Z8
	VMOVSHDUP    Z11, K3, Z8
	VPSUBD       Z0, Z8, Z13
	VPMINUD      Z8, Z13, Z8
	VPADDD       Z3, Z8, Z3     // result = result + acc
	VPSUBD       Z0, Z3, Z8
	VPMINUD      Z3, Z8, Z3
	VMOVDQU32    Z3, 0(CX)
	ADDQ         $64, CX
	ADDQ         $16, R15
	DECQ         BX             // decrement N
	JMP          start_1        // loop

end_2:
	RET

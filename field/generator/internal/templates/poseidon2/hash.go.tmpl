import (
    fr "{{ .FieldPackagePath }}"
	"sync"
	"hash"
	gnarkHash "github.com/consensys/gnark-crypto/hash"
)

// NewMerkleDamgardHasher returns a Poseidon2 hasher using the Merkle-Damgard
// construction with the default parameters.
func NewMerkleDamgardHasher() gnarkHash.StateStorer {
	return gnarkHash.NewMerkleDamgardHasher(
		&Permutation{GetDefaultParameters()}, make([]byte, fr.Bytes))
}

{{ $widthCompression := 16 }}
{{ $widthSponge := 24 }}
{{ $nbPartialCompression := 12 }}
{{ $nbPartialSponge := 19 }}

{{ if eq .FF "goldilocks" }} {{ $widthCompression = 8}} {{$widthSponge = 12}} {{ $nbPartialCompression = 17 }} {{$nbPartialSponge = 17}} {{ end }}
{{ if eq .FF "koalabear" }} {{ $nbPartialCompression = 21 }} {{ $nbPartialSponge = 21 }} {{ end }}


// GetDefaultParameters returns a set of parameters for the Poseidon2 permutation.
// The default parameters are,
//
//  1. for compression:
//     - width: {{$widthCompression}}
//     - nbFullRounds: 6
//     - nbPartialRounds: {{$nbPartialCompression}}
//
//  2. for sponge:
//     - width: {{$widthSponge}}
//     - nbFullRounds: 6
//     - nbPartialRounds: {{$nbPartialSponge}}
var GetDefaultParameters = sync.OnceValue(func() *Parameters {
	return NewParameters({{$widthCompression}}, 6, {{$nbPartialCompression}})
	// return NewParameters({{$widthSponge}}, 6, {{$nbPartialSponge}})
})

{{ if eq .FF "babybear" }}
var diag16 [16]fr.Element
var diag24 [24]fr.Element

func init() {
	// diagonal of internal matrix when Width=16
	diag16[0].SetUint64(2013265919)
	diag16[1].SetUint64(1)
	diag16[2].SetUint64(2)
	diag16[3].SetUint64(1006632961)
	diag16[4].SetUint64(3)
	diag16[5].SetUint64(4)
	diag16[6].SetUint64(1006632960)
	diag16[7].SetUint64(2013265918)
	diag16[8].SetUint64(2013265917)
	diag16[9].SetUint64(2005401601)
	diag16[10].SetUint64(1509949441)
	diag16[11].SetUint64(1761607681)
	diag16[12].SetUint64(2013265906)
	diag16[13].SetUint64(7864320)
	diag16[14].SetUint64(125829120)
	diag16[15].SetUint64(15)

	// diagonal of internal matrix when Width=24
	diag24[0].SetUint64(2013265919)
	diag24[1].SetUint64(1)
	diag24[2].SetUint64(2)
	diag24[3].SetUint64(1006632961)
	diag24[4].SetUint64(3)
	diag24[5].SetUint64(4)
	diag24[6].SetUint64(1006632960)
	diag24[7].SetUint64(2013265918)
	diag24[8].SetUint64(2013265917)
	diag24[9].SetUint64(2005401601)
	diag24[10].SetUint64(1509949441)
	diag24[11].SetUint64(1761607681)
	diag24[12].SetUint64(1887436801)
	diag24[13].SetUint64(1997537281)
	diag24[14].SetUint64(2009333761)
	diag24[15].SetUint64(2013265906)
	diag24[16].SetUint64(7864320)
	diag24[17].SetUint64(503316480)
	diag24[18].SetUint64(251658240)
	diag24[19].SetUint64(125829120)
	diag24[20].SetUint64(62914560)
	diag24[21].SetUint64(31457280)
	diag24[22].SetUint64(15728640)
	diag24[23].SetUint64(15)
{{ end }}

{{ if eq .FF "koalabear" }}
var diag16 [16]fr.Element
var diag24 [24]fr.Element

func init() {
	// diagonal of internal matrix when Width=16
	diag16[0].SetUint64(2130706431)
	diag16[1].SetUint64(1)
	diag16[2].SetUint64(2)
	diag16[3].SetUint64(1065353217)
	diag16[4].SetUint64(3)
	diag16[5].SetUint64(4)
	diag16[6].SetUint64(1065353216)
	diag16[7].SetUint64(2130706430)
	diag16[8].SetUint64(2130706429)
	diag16[9].SetUint64(2122383361)
	diag16[10].SetUint64(1864368129)
	diag16[11].SetUint64(2130706306)
	diag16[12].SetUint64(8323072)
	diag16[13].SetUint64(266338304)
	diag16[14].SetUint64(133169152)
	diag16[15].SetUint64(127)

	// diagonal of internal matrix when Width=24
	diag24[0].SetUint64(2130706431)
	diag24[1].SetUint64(1)
	diag24[2].SetUint64(2)
	diag24[3].SetUint64(1065353217)
	diag24[4].SetUint64(3)
	diag24[5].SetUint64(4)
	diag24[6].SetUint64(1065353216)
	diag24[7].SetUint64(2130706430)
	diag24[8].SetUint64(2130706429)
	diag24[9].SetUint64(2122383361)
	diag24[10].SetUint64(1598029825)
	diag24[11].SetUint64(1864368129)
	diag24[12].SetUint64(1997537281)
	diag24[13].SetUint64(2064121857)
	diag24[14].SetUint64(2097414145)
	diag24[15].SetUint64(2130706306)
	diag24[16].SetUint64(8323072)
	diag24[17].SetUint64(266338304)
	diag24[18].SetUint64(133169152)
	diag24[19].SetUint64(66584576)
	diag24[20].SetUint64(33292288)
	diag24[21].SetUint64(16646144)
	diag24[22].SetUint64(4161536)
	diag24[23].SetUint64(127)
{{ end }}

{{ if eq .FF "goldilocks" }}
var diag8 [8]fr.Element

func init() {
	// diagonal of internal matrix when Width=8
	// same as https://github.com/Plonky3/Plonky3/blob/f91c76545cf5c4ae9182897bcc557715817bcbdc/goldilocks/src/poseidon2.rs#L54
	diag8[0].SetUint64(0xa98811a1fed4e3a5)
	diag8[1].SetUint64(0x1cc48b54f377e2a0)
	diag8[2].SetUint64(0xe40cd4f6c5609a26)
	diag8[3].SetUint64(0x11de79ebca97a4a3)
	diag8[4].SetUint64(0x9177c73d8b7e929c)
	diag8[5].SetUint64(0x2a6fe8085797e791)
	diag8[6].SetUint64(0x3de6e93329f8d5ad)
	diag8[7].SetUint64(0x3f7af9125da962fe)
{{ end }}

	gnarkHash.RegisterHash(gnarkHash.POSEIDON2_{{toUpper .FF }}, func() hash.Hash {
		return NewMerkleDamgardHasher()
	})
}